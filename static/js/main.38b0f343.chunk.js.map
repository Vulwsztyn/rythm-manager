{"version":3,"sources":["send.js","TopBar.js","App.js","serviceWorker.js","theme.js","index.js","reducers.js"],"names":["send","text","axios","post","msg","ElevationScroll","props","children","window","trigger","useScrollTrigger","disableHysteresis","threshold","target","undefined","React","cloneElement","elevation","useStyles","makeStyles","theme","root","margin","spacing","right","marginLeft","TopBar","classes","Fragment","CssBaseline","AppBar","Toolbar","className","Grid","justify","container","item","map","Button","variant","color","onClick","playRandomN","oneOfEverything","R","require","width","backgroundColor","palette","background","paper","nested","paddingLeft","NestedList","shuffle","array","temporaryValue","randomIndex","currentIndex","length","Math","floor","random","useState","myList","setMyList","links","setLinks","linksByArtist","setLinksByArtist","extractHash","link","res1","match","res2","useEffect","reduceFn","acc","x","path","slice","data","split","title","rest","command","join","trim","assocPath","pathOr","name","currentArtist","dataMapper","reduce","a","get","mappedData","setInterval","effect","sendList","list","console","log","elemToList","e","y","concat","handleClick","position","n","Object","keys","items","splitList","xs","sm","md","lg","band","List","component","aria-labelledby","listMapper","padding","ListItem","button","key","style","ListItemText","primary","disablePadding","Boolean","location","hostname","darkTheme","createMuiTheme","type","store","createStore","state","action","ReactDOM","render","StrictMode","ThemeProvider","display","justifyContent","alignItems","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.38b0f343.chunk.js","sourcesContent":["import axios from 'axios'\nconst send = (text) => {\n  axios.post('https://rythm-manager.herokuapp.com/', {\n    msg: text,\n  })\n}\nexport default send\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport AppBar from '@material-ui/core/AppBar'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport CssBaseline from '@material-ui/core/CssBaseline'\nimport useScrollTrigger from '@material-ui/core/useScrollTrigger'\nimport Button from '@material-ui/core/Button'\nimport Grid from '@material-ui/core/Grid'\n\nimport { makeStyles } from '@material-ui/core/styles'\nimport send from './send'\nfunction ElevationScroll(props) {\n  const { children, window } = props\n  // Note that you normally won't need to set the window ref as useScrollTrigger\n  // will default to window.\n  // This is only being set here because the demo is in an iframe.\n  const trigger = useScrollTrigger({\n    disableHysteresis: true,\n    threshold: 0,\n    target: window ? window() : undefined,\n  })\n\n  return React.cloneElement(children, {\n    elevation: trigger ? 4 : 0,\n  })\n}\n\nElevationScroll.propTypes = {\n  children: PropTypes.element.isRequired,\n  /**\n   * Injected by the documentation to work in an iframe.\n   * You won't need it on your project.\n   */\n  window: PropTypes.func,\n}\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    '& > *': {\n      margin: theme.spacing(1),\n      'font-size': 16,\n    },\n  },\n  right: {\n    marginLeft: 'auto',\n  },\n}))\nexport default function TopBar(props) {\n  const classes = useStyles()\n  return (\n    <React.Fragment>\n      <CssBaseline />\n      <ElevationScroll {...props}>\n        <AppBar>\n          <Toolbar className={classes.root}>\n            <Grid\n              justify=\"space-between\" // Add it here :)\n              container\n              spacing={24}\n            >\n              <Grid item>\n                <Grid container spacing={1}>\n                  {['!q', '!fs', '!shuffle', '!pause', '!play', '!clean'].map(\n                    (text) => (\n                      <Grid item>\n                        <Button\n                          variant=\"contained\"\n                          color=\"primary\"\n                          onClick={() => send(text)}\n                        >\n                          {text}\n                        </Button>\n                      </Grid>\n                    )\n                  )}\n                  <Grid item>\n                    <Button\n                      variant=\"contained\"\n                      color=\"primary\"\n                      onClick={() => props.playRandomN(50)}\n                    >\n                      Random 50\n                    </Button>\n                  </Grid>\n                  <Grid item>\n                    <Button\n                      variant=\"contained\"\n                      color=\"primary\"\n                      onClick={() => props.oneOfEverything()}\n                    >\n                      One of Everything\n                    </Button>\n                  </Grid>\n                </Grid>\n              </Grid>\n\n              <Grid item>\n                <Grid container spacing={1}>\n                  {['!clear', '!disconnect'].map((text) => (\n                    <Grid item>\n                      <Button\n                        variant=\"contained\"\n                        color=\"secondary\"\n                        className={classes.right}\n                        onClick={() => send(text)}\n                      >\n                        {text}\n                      </Button>\n                    </Grid>\n                  ))}\n                </Grid>\n              </Grid>\n            </Grid>\n          </Toolbar>\n        </AppBar>\n      </ElevationScroll>\n      <Toolbar />\n    </React.Fragment>\n  )\n}\n","import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Grid from '@material-ui/core/Grid'\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport axios from 'axios'\nimport send from './send'\nimport TopBar from './TopBar'\n\nconst R = require('ramda')\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n    backgroundColor: theme.palette.background.paper,\n  },\n  nested: {\n    paddingLeft: theme.spacing(4),\n  },\n}))\n\nexport default function NestedList() {\n  function shuffle(array) {\n    var currentIndex = array.length,\n      temporaryValue,\n      randomIndex\n\n    // While there remain elements to shuffle...\n    while (0 !== currentIndex) {\n      // Pick a remaining element...\n      randomIndex = Math.floor(Math.random() * currentIndex)\n      currentIndex -= 1\n\n      // And swap it with the current element.\n      temporaryValue = array[currentIndex]\n      array[currentIndex] = array[randomIndex]\n      array[randomIndex] = temporaryValue\n    }\n\n    return array\n  }\n\n  const classes = useStyles()\n  const [myList, setMyList] = React.useState([])\n  const [links, setLinks] = React.useState([])\n  const [linksByArtist, setLinksByArtist] = React.useState({})\n  // const links = {}\n  function extractHash(link) {\n    const res1 = link.match(/watch\\?v=([^&]*)/)\n    const res2 = link.match(/youtu\\.be\\/([^?]*)/)\n    const hash = (res1 && res1[1]) || (res2 && res2[1]) || link\n    return hash\n  }\n\n  React.useEffect(() => {\n    function reduceFn(acc, x, path = []) {\n      if (x.length < 1) return acc\n      if (x[0] === '-') {\n        return reduceFn(acc, x.slice(1), [\n          ...path,\n          R.path(path, acc.data).length - 1,\n          'children',\n        ])\n      } else {\n        const [title, ...rest] = x.split('-')\n        const command = extractHash(rest.join('-').trim())\n        return {\n          data: R.assocPath(\n            [...path, R.pathOr([], path, acc.data).length],\n            {\n              name: title.trim(),\n              ...(command.length > 0 ? { command } : {}),\n            },\n            acc.data\n          ),\n          links: [...acc.links, ...(command.length > 0 ? [command] : [])],\n          currentArtist: path.length > 0 ? acc.currentArtist : title,\n          linksByArtist:\n            path.length > 0 && command.length > 0\n              ? R.assocPath(\n                  [\n                    acc.currentArtist,\n                    R.pathOr([], [acc.currentArtist], acc.linksByArtist).length,\n                  ],\n                  command,\n                  acc.linksByArtist\n                )\n              : acc.linksByArtist,\n        }\n      }\n    }\n\n    function dataMapper(data) {\n      const mapped = R.reduce(\n        reduceFn,\n        { data: [], links: [], linksByArtist: {} },\n        data.split('\\n')\n      )\n      // console.log(mapped.linksByArtist)\n      return mapped\n    }\n\n    async function effect() {\n      const { data } = await axios.get(\n        'https://raw.githubusercontent.com/Vulwsztyn/rythm-manager/config/config'\n      )\n      // console.log(dataMapper(data))\n      const mappedData = dataMapper(data)\n      setMyList(shuffle(mappedData.data))\n      setLinks(mappedData.links)\n      setLinksByArtist(mappedData.linksByArtist)\n      setInterval(\n        () => axios.get('https://rythm-manager.herokuapp.com/'),\n        10000\n      )\n    }\n    effect()\n  }, [])\n  const choose = (items) => items[Math.floor(Math.random() * items.length)]\n\n  function oneOfEverything() {\n    const list = shuffle(\n      Object.keys(linksByArtist).map((name) => choose(linksByArtist[name]))\n    )\n    sendList(list)\n  }\n\n  function playRandomN(n) {\n    const list = shuffle(links).slice(0, n)\n    sendList(list)\n  }\n\n  async function sendList(list) {\n    console.log(list)\n    await send(\n      '!p http://www.youtube.com/watch_videos?video_ids=' + list.join(',')\n    )\n  }\n\n  function elemToList(e) {\n    if (!e.children) {\n      return [e.command]\n    } else {\n      return e.children.map((e) => elemToList(e)).reduce((x, y) => x.concat(y))\n    }\n  }\n\n  async function handleClick(e) {\n    const list = elemToList(e)\n    sendList(list.length <= 50 ? list : shuffle(list))\n  }\n\n  const listMapper = (padding) => (e) => {\n    return (\n      <>\n        <ListItem\n          button={true}\n          key={e.name}\n          style={{ paddingLeft: (padding + 1) * 4 + 'em' }}\n          onClick={async () => {\n            handleClick(e)\n          }}\n        >\n          <ListItemText primary={e.name} />\n        </ListItem>\n        {e.children ? (\n          <List component=\"div\" disablePadding>\n            {shuffle(e.children).map(listMapper(padding + 1))}\n          </List>\n        ) : (\n          <></>\n        )}\n      </>\n    )\n  }\n\n  return (\n    <>\n      <TopBar\n        position=\"sticky\"\n        playRandomN={playRandomN}\n        oneOfEverything={oneOfEverything}\n      />\n      <Grid container spacing={3}>\n        {[\n          myList.slice(\n            Math.floor(myList.length / 4) * 0,\n            Math.floor(myList.length / 4) * 1\n          ),\n          myList.slice(\n            Math.floor(myList.length / 4) * 1,\n            Math.floor(myList.length / 4) * 2\n          ),\n          myList.slice(\n            Math.floor(myList.length / 4) * 2,\n            Math.floor(myList.length / 4) * 3\n          ),\n          myList.slice(\n            Math.floor(myList.length / 4) * 3,\n            Math.floor((myList.length / 4) * 4)\n          ),\n        ].map((splitList) => (\n          <Grid xs={12} sm={6} md={4} lg={3}>\n            {splitList.map((band) => {\n              return (\n                <Grid item xs={12}>\n                  <List\n                    component=\"nav\"\n                    aria-labelledby=\"nested-list-subheader\"\n                    className={classes.root}\n                  >\n                    {[band].map(listMapper(0))}\n                  </List>\n                </Grid>\n              )\n            })}\n          </Grid>\n        ))}\n      </Grid>\n    </>\n  )\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { createMuiTheme } from '@material-ui/core/styles'\nconst darkTheme = createMuiTheme({\n  palette: {\n    type: 'dark',\n  },\n})\nexport default darkTheme\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\nimport { ThemeProvider } from '@material-ui/core/styles'\nimport darkTheme from './theme'\nimport { reducer } from './reducers'\nimport { createStore } from 'redux'\nimport { Provider } from 'react-redux'\nconst store = createStore(reducer)\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <ThemeProvider theme={darkTheme}>\n        <App\n          style={{\n            display: 'flex',\n            justifyContent: 'center',\n            alignItems: 'center',\n          }}\n        />\n      </ThemeProvider>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n","export const reducer = function (state = 0, action) {\n  switch (action.type) {\n    case 'INCREMENT':\n      return state + 1\n    case 'DECREMENT':\n      return state - 1\n    default:\n      return state\n  }\n}\n"],"sourceRoot":""}