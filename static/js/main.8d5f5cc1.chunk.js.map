{"version":3,"sources":["send.js","App.js","TopBar.js","serviceWorker.js","theme.js","index.js"],"names":["send","text","axios","post","msg","R","require","useStyles","makeStyles","theme","root","width","backgroundColor","palette","background","paper","nested","paddingLeft","spacing","NestedList","shuffle","array","temporaryValue","randomIndex","currentIndex","length","Math","floor","random","classes","React","useState","myList","setMyList","extractHash","link","res1","match","res2","sendList","list","a","console","log","join","elemToList","e","children","map","reduce","x","y","concat","command","handleClick","useEffect","reduceFn","acc","path","slice","split","title","rest","trim","assocPath","pathOr","name","dataMapper","data","get","setInterval","effect","Grid","container","splitList","xs","sm","md","lg","band","item","List","component","aria-labelledby","className","listMapper","padding","ListItem","button","key","style","onClick","ListItemText","primary","disablePadding","ElevationScroll","props","window","trigger","useScrollTrigger","disableHysteresis","threshold","target","undefined","cloneElement","elevation","margin","right","marginLeft","TopBar","Fragment","CssBaseline","AppBar","Toolbar","justify","Button","variant","color","Boolean","location","hostname","darkTheme","createMuiTheme","type","ReactDOM","render","StrictMode","ThemeProvider","position","display","justifyContent","alignItems","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.8d5f5cc1.chunk.js","sourcesContent":["import axios from 'axios'\nconst send = (text) => {\n  axios.post('https://rythm-manager.herokuapp.com/', {\n    msg: text,\n  })\n}\nexport default send\n","import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Grid from '@material-ui/core/Grid'\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport axios from 'axios'\nimport send from './send'\nconst R = require('ramda')\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n    backgroundColor: theme.palette.background.paper,\n  },\n  nested: {\n    paddingLeft: theme.spacing(4),\n  },\n}))\n\nexport default function NestedList() {\n  function shuffle(array) {\n    var currentIndex = array.length,\n      temporaryValue,\n      randomIndex\n\n    // While there remain elements to shuffle...\n    while (0 !== currentIndex) {\n      // Pick a remaining element...\n      randomIndex = Math.floor(Math.random() * currentIndex)\n      currentIndex -= 1\n\n      // And swap it with the current element.\n      temporaryValue = array[currentIndex]\n      array[currentIndex] = array[randomIndex]\n      array[randomIndex] = temporaryValue\n    }\n\n    return array\n  }\n\n  const classes = useStyles()\n  const [myList, setMyList] = React.useState([])\n\n  function extractHash(link) {\n    const res1 = link.match(/watch\\?v=([^&]*)/)\n    const res2 = link.match(/youtu\\.be\\/([^?]*)/)\n    const hash = (res1 && res1[1]) || (res2 && res2[1]) || link\n    return hash\n  }\n\n  React.useEffect(() => {\n    function reduceFn(acc, x, path = []) {\n      if (x.length < 1) return acc\n      if (x[0] === '-') {\n        return reduceFn(acc, x.slice(1), [\n          ...path,\n          R.path(path, acc).length - 1,\n          'children',\n        ])\n      } else {\n        const [title, ...rest] = x.split('-')\n        const command = extractHash(rest.join('-').trim())\n        return R.assocPath(\n          [...path, R.pathOr([], path, acc).length],\n          {\n            name: title.trim(),\n            ...(command.length > 0 ? { command } : {}),\n          },\n          acc\n        )\n      }\n    }\n\n    function dataMapper(data) {\n      const mapped = R.reduce(reduceFn, [], data.split('\\n'))\n      return mapped\n    }\n\n    async function effect() {\n      const { data } = await axios.get(\n        'https://raw.githubusercontent.com/Vulwsztyn/rythm-manager/config/config'\n      )\n      console.log(dataMapper(data))\n      setMyList(shuffle(dataMapper(data)))\n      setInterval(\n        () => axios.get('https://rythm-manager.herokuapp.com/'),\n        10000\n      )\n    }\n    effect()\n  }, [])\n\n  async function sendList(list) {\n    console.log(list)\n    await send(\n      '!p http://www.youtube.com/watch_videos?video_ids=' + list.join(',')\n    )\n  }\n\n  function elemToList(e) {\n    if (!e.children) {\n      return [e.command]\n    } else {\n      return e.children.map((e) => elemToList(e)).reduce((x, y) => x.concat(y))\n    }\n  }\n\n  async function handleClick(e) {\n    const list = elemToList(e)\n    sendList(list.length <= 50 ? list : shuffle(list))\n  }\n\n  const listMapper = (padding) => (e) => {\n    return (\n      <>\n        <ListItem\n          button={true}\n          key={e.name}\n          style={{ paddingLeft: (padding + 1) * 4 + 'em' }}\n          onClick={async () => {\n            handleClick(e)\n          }}\n        >\n          <ListItemText primary={e.name} />\n        </ListItem>\n        {e.children ? (\n          <List component=\"div\" disablePadding>\n            {shuffle(e.children).map(listMapper(padding + 1))}\n          </List>\n        ) : (\n          <></>\n        )}\n      </>\n    )\n  }\n\n  return (\n    <Grid container spacing={3}>\n      {[\n        myList.slice(\n          Math.floor(myList.length / 4) * 0,\n          Math.floor(myList.length / 4) * 1\n        ),\n        myList.slice(\n          Math.floor(myList.length / 4) * 1,\n          Math.floor(myList.length / 4) * 2\n        ),\n        myList.slice(\n          Math.floor(myList.length / 4) * 2,\n          Math.floor(myList.length / 4) * 3\n        ),\n        myList.slice(\n          Math.floor(myList.length / 4) * 3,\n          Math.floor((myList.length / 4) * 4)\n        ),\n      ].map((splitList) => (\n        <Grid xs={12} sm={6} md={4} lg={3}>\n          {splitList.map((band) => {\n            return (\n              <Grid item xs={12}>\n                <List\n                  component=\"nav\"\n                  aria-labelledby=\"nested-list-subheader\"\n                  className={classes.root}\n                >\n                  {[band].map(listMapper(0))}\n                </List>\n              </Grid>\n            )\n          })}\n        </Grid>\n      ))}\n    </Grid>\n  )\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport AppBar from '@material-ui/core/AppBar'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport CssBaseline from '@material-ui/core/CssBaseline'\nimport useScrollTrigger from '@material-ui/core/useScrollTrigger'\nimport Button from '@material-ui/core/Button'\nimport Grid from '@material-ui/core/Grid'\n\nimport { makeStyles } from '@material-ui/core/styles'\nimport send from './send'\nfunction ElevationScroll(props) {\n  const { children, window } = props\n  // Note that you normally won't need to set the window ref as useScrollTrigger\n  // will default to window.\n  // This is only being set here because the demo is in an iframe.\n  const trigger = useScrollTrigger({\n    disableHysteresis: true,\n    threshold: 0,\n    target: window ? window() : undefined,\n  })\n\n  return React.cloneElement(children, {\n    elevation: trigger ? 4 : 0,\n  })\n}\n\nElevationScroll.propTypes = {\n  children: PropTypes.element.isRequired,\n  /**\n   * Injected by the documentation to work in an iframe.\n   * You won't need it on your project.\n   */\n  window: PropTypes.func,\n}\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    '& > *': {\n      margin: theme.spacing(1),\n      'font-size': 16,\n    },\n  },\n  right: {\n    marginLeft: 'auto',\n  },\n}))\nexport default function TopBar(props) {\n  const classes = useStyles()\n  return (\n    <React.Fragment>\n      <CssBaseline />\n      <ElevationScroll {...props}>\n        <AppBar>\n          <Toolbar className={classes.root}>\n            <Grid\n              justify=\"space-between\" // Add it here :)\n              container\n              spacing={24}\n            >\n              <Grid item>\n                <Grid container spacing={1}>\n                  {['!q', '!fs', '!shuffle', '!pause', '!play', '!clean'].map(\n                    (text) => (\n                      <Grid item>\n                        <Button\n                          variant=\"contained\"\n                          color=\"primary\"\n                          onClick={() => send(text)}\n                        >\n                          {text}\n                        </Button>\n                      </Grid>\n                    )\n                  )}\n                </Grid>\n              </Grid>\n\n              <Grid item>\n                <Grid container spacing={1}>\n                  {['!clear', '!disconnect'].map((text) => (\n                    <Grid item>\n                      <Button\n                        variant=\"contained\"\n                        color=\"secondary\"\n                        className={classes.right}\n                        onClick={() => send(text)}\n                      >\n                        {text}\n                      </Button>\n                    </Grid>\n                  ))}\n                </Grid>\n              </Grid>\n            </Grid>\n          </Toolbar>\n        </AppBar>\n      </ElevationScroll>\n      <Toolbar />\n    </React.Fragment>\n  )\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { createMuiTheme } from '@material-ui/core/styles'\nconst darkTheme = createMuiTheme({\n  palette: {\n    type: 'dark',\n  },\n})\nexport default darkTheme\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport TopBar from './TopBar'\nimport * as serviceWorker from './serviceWorker'\nimport { ThemeProvider } from '@material-ui/core/styles'\nimport darkTheme from './theme'\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={darkTheme}>\n      <TopBar position=\"sticky\" />\n      <App\n        style={{\n          display: 'flex',\n          justifyContent: 'center',\n          alignItems: 'center',\n        }}\n      />\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}