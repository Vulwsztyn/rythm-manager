{"version":3,"sources":["ChooseCommand.js","ChoosePrefix.js","TopBar.js","send.js","Sender.js","App.js","serviceWorker.js","reducers.js","index.js"],"names":["useStyles","makeStyles","theme","root","display","flexDirection","horizontal","Container","connect","state","command","dispatch","setCommand","value","type","classes","handleChange","event","target","name","className","FormControl","component","formControl","FormGroup","map","text","FormControlLabel","control","Checkbox","checked","onChange","key","label","prefix","setPrefix","ElevationScroll","props","children","trigger","useScrollTrigger","disableHysteresis","threshold","React","cloneElement","elevation","margin","spacing","flexGrow","right","marginLeft","TopBar","sendWithPrefix","Fragment","CssBaseline","AppBar","Toolbar","Grid","container","direction","item","xs","justify","buttonFiller","Button","variant","color","onClick","playRandomN","oneOfEverything","ChoosePrefix","ChooseCommand","send","axios","post","msg","forwardRef","useImperativeHandle","Sender","ref","sendWithPrefixAndCommand","R","require","useRef","width","backgroundColor","palette","background","paper","nested","paddingLeft","content","shuffle","array","temporaryValue","randomIndex","currentIndex","length","Math","floor","random","useState","myList","setMyList","links","setLinks","linksByArtist","setLinksByArtist","extractHash","link","res1","match","res2","elemToList","e","reduce","x","y","concat","handleClick","a","sendList","useEffect","reduceFn","acc","path","slice","data","split","title","join","trim","assocPath","pathOr","currentArtist","dataMapper","filter","startsWith","console","log","get","mappedData","setInterval","effect","childRef","list","current","position","n","Object","keys","items","t","splitList","sm","md","lg","band","List","aria-labelledby","listMapper","padding","ListItem","button","style","ListItemText","primary","disablePadding","Boolean","window","location","hostname","defaultState","store","createStore","action","ReactDOM","render","StrictMode","basename","process","justifyContent","alignItems","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.6232aa46.chunk.js","sourcesContent":["import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport FormControl from '@material-ui/core/FormControl'\nimport FormGroup from '@material-ui/core/FormGroup'\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\nimport Checkbox from '@material-ui/core/Checkbox'\nimport { connect } from 'react-redux'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    flexDirection: 'row',\n  },\n  horizontal: {\n    display: 'flex',\n    flexDirection: 'row',\n  },\n}))\n\nfunction CheckboxesGroup({ command, setCommand }) {\n  const classes = useStyles()\n\n  const handleChange = (event) => {\n    setCommand(event.target.name)\n  }\n\n  return (\n    <div className={classes.root}>\n      <FormControl component=\"fieldset\" className={classes.formControl}>\n        <FormGroup className={classes.horizontal}>\n          {['p', 'pt', 'ps'].map((text) => (\n            <FormControlLabel\n              control={\n                <Checkbox\n                  checked={command === text}\n                  onChange={handleChange}\n                  name={text}\n                  key={text}\n                />\n              }\n              label={text}\n            />\n          ))}\n        </FormGroup>\n      </FormControl>\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => {\n  const { command } = state\n  return {\n    command,\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    setCommand: (value) => dispatch({ type: 'CHANGE_COMMAND', value }),\n  }\n}\nconst Container = connect(mapStateToProps, mapDispatchToProps)(CheckboxesGroup)\nexport default Container\n","import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport FormControl from '@material-ui/core/FormControl'\nimport FormGroup from '@material-ui/core/FormGroup'\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\nimport Checkbox from '@material-ui/core/Checkbox'\nimport { connect } from 'react-redux'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    flexDirection: 'row',\n  },\n  horizontal: {\n    display: 'flex',\n    flexDirection: 'row',\n  },\n  //   formControl: {\n  //     margin: theme.spacing(3),\n  //   },\n}))\n\nfunction CheckboxesGroup({ prefix, setPrefix }) {\n  const classes = useStyles()\n\n  const handleChange = (event) => {\n    setPrefix(event.target.name)\n    // setState({ ...state, [event.target.name]: event.target.checked })\n  }\n\n  return (\n    <div className={classes.root}>\n      <FormControl component=\"fieldset\" className={classes.formControl}>\n        <FormGroup className={classes.horizontal}>\n          {['!', '*'].map((text) => (\n            <FormControlLabel\n              control={\n                <Checkbox\n                  checked={prefix === text}\n                  onChange={handleChange}\n                  name={text}\n                  key={text}\n                />\n              }\n              label={text}\n            />\n          ))}\n        </FormGroup>\n      </FormControl>\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => {\n  const { prefix } = state\n  return {\n    prefix,\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    setPrefix: (value) => dispatch({ type: 'CHANGE_PREFIX', value }),\n  }\n}\nconst Container = connect(mapStateToProps, mapDispatchToProps)(CheckboxesGroup)\nexport default Container\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport AppBar from '@material-ui/core/AppBar'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport CssBaseline from '@material-ui/core/CssBaseline'\nimport useScrollTrigger from '@material-ui/core/useScrollTrigger'\nimport Button from '@material-ui/core/Button'\nimport Grid from '@material-ui/core/Grid'\nimport { makeStyles } from '@material-ui/core/styles'\nimport ChooseCommand from './ChooseCommand'\nimport ChoosePrefix from './ChoosePrefix'\n\nimport SkipNextSharpIcon from '@material-ui/icons/SkipNextSharp'\nimport ShuffleSharpIcon from '@material-ui/icons/ShuffleSharp'\nimport PlayCircleFilledWhiteSharpIcon from '@material-ui/icons/PlayCircleFilledWhiteSharp'\nimport LoopSharpIcon from '@material-ui/icons/LoopSharp'\nimport PauseCircleFilledSharpIcon from '@material-ui/icons/PauseCircleFilledSharp'\nimport ClearAllSharpIcon from '@material-ui/icons/ClearAllSharp'\nimport QueueMusicSharpIcon from '@material-ui/icons/QueueMusicSharp'\nimport Forward5SharpIcon from '@material-ui/icons/Forward5Sharp'\nimport Forward10SharpIcon from '@material-ui/icons/Forward10Sharp'\nimport Forward30SharpIcon from '@material-ui/icons/Forward30Sharp'\nimport Replay5SharpIcon from '@material-ui/icons/Replay5Sharp'\nimport Replay10SharpIcon from '@material-ui/icons/Replay10Sharp'\nimport Replay30SharpIcon from '@material-ui/icons/Replay30Sharp'\nfunction ElevationScroll(props) {\n  const { children } = props\n  // // Note that you normally won't need to set the window ref as useScrollTrigger\n  // // will default to window.\n  // // This is only being set here because the demo is in an iframe.\n  const trigger = useScrollTrigger({\n    disableHysteresis: true,\n    threshold: 0,\n  })\n\n  return React.cloneElement(children, {\n    elevation: trigger ? 8 : 0,\n  })\n}\n\nElevationScroll.propTypes = {\n  children: PropTypes.element.isRequired,\n  /**\n   * Injected by the documentation to work in an iframe.\n   * You won't need it on your project.\n   */\n  window: PropTypes.func,\n}\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    '& > *': {\n      margin: theme.spacing(1),\n      flexGrow: 1,\n      'font-size': 16,\n    },\n  },\n  right: {\n    marginLeft: 'auto',\n  },\n}))\nexport default function TopBar(props) {\n  const { sendWithPrefix } = props\n  const classes = useStyles()\n  return (\n    <React.Fragment>\n      <CssBaseline />\n      <ElevationScroll {...props}>\n        <AppBar>\n          <Toolbar className={classes.root}>\n            <Grid\n              container\n              spacing={1}\n              // padding={20}\n              direction=\"row\"\n              // justify=\"space-between\"\n            >\n              <Grid item xs={12}>\n                <Grid\n                  justify=\"space-between\" // Add it here :)\n                  container\n                  spacing={24}\n                >\n                  <Grid item>\n                    <Grid container spacing={1}>\n                      {[\n                        {\n                          command: 'q',\n                          buttonFiller: <QueueMusicSharpIcon />,\n                        },\n                        {\n                          command: 'fs',\n                          buttonFiller: <SkipNextSharpIcon />,\n                        },\n                        {\n                          command: 'shuffle',\n                          buttonFiller: <ShuffleSharpIcon />,\n                        },\n                        {\n                          command: 'pause',\n                          buttonFiller: <PauseCircleFilledSharpIcon />,\n                        },\n                        {\n                          command: 'play',\n                          buttonFiller: <PlayCircleFilledWhiteSharpIcon />,\n                        },\n                        {\n                          command: 'clean',\n                          buttonFiller: <ClearAllSharpIcon />,\n                        },\n                        {\n                          command: 'loop',\n                          buttonFiller: <LoopSharpIcon />,\n                        },\n                      ].map(({ command, buttonFiller }) => (\n                        <Grid item>\n                          <Button\n                            variant=\"contained\"\n                            color=\"primary\"\n                            onClick={() => sendWithPrefix(command)}\n                          >\n                            {buttonFiller}\n                          </Button>\n                        </Grid>\n                      ))}\n                      <Grid item>\n                        <Button\n                          variant=\"contained\"\n                          color=\"primary\"\n                          onClick={() => props.playRandomN(50)}\n                        >\n                          Random 50\n                        </Button>\n                      </Grid>\n                      <Grid item>\n                        <Button\n                          variant=\"contained\"\n                          color=\"primary\"\n                          onClick={() => props.oneOfEverything()}\n                        >\n                          One of Everything\n                        </Button>\n                      </Grid>\n                    </Grid>\n                  </Grid>\n\n                  <Grid item>\n                    <Grid container spacing={1}>\n                      {['clear', 'disconnect'].map((text) => (\n                        <Grid item>\n                          <Button\n                            variant=\"contained\"\n                            color=\"secondary\"\n                            className={classes.right}\n                            onClick={() => sendWithPrefix(text)}\n                          >\n                            {text}\n                          </Button>\n                        </Grid>\n                      ))}\n                    </Grid>\n                  </Grid>\n                </Grid>\n              </Grid>\n              <Grid item xs={12}>\n                <Grid\n                  justify=\"space-between\" // Add it here :)\n                  container\n                  spacing={24}\n                >\n                  <Grid item>\n                    <Grid container spacing={1}>\n                      {[\n                        {\n                          command: 'rewind 30',\n                          buttonFiller: <Replay30SharpIcon />,\n                        },\n                        {\n                          command: 'rewind 10',\n                          buttonFiller: <Replay10SharpIcon />,\n                        },\n                        {\n                          command: 'rewind 5',\n                          buttonFiller: <Replay5SharpIcon />,\n                        },\n                        {\n                          command: 'forward 5',\n                          buttonFiller: <Forward5SharpIcon />,\n                        },\n                        {\n                          command: 'forward 10',\n                          buttonFiller: <Forward10SharpIcon />,\n                        },\n                        {\n                          command: 'forward 30',\n                          buttonFiller: <Forward30SharpIcon />,\n                        },\n                      ].map(({ command, buttonFiller }) => (\n                        <Grid item>\n                          <Button\n                            variant=\"contained\"\n                            color=\"primary\"\n                            onClick={() => sendWithPrefix(command)}\n                          >\n                            {buttonFiller}\n                          </Button>\n                        </Grid>\n                      ))}\n                    </Grid>\n                  </Grid>\n                  <Grid item>\n                    <ChoosePrefix />\n                  </Grid>\n                  <Grid item>\n                    <ChooseCommand />\n                  </Grid>\n                  <Grid item>\n                  </Grid>\n                </Grid>\n              </Grid>\n            </Grid>\n          </Toolbar>\n        </AppBar>\n      </ElevationScroll>\n      <Toolbar />\n    </React.Fragment>\n  )\n}\n","import axios from 'axios'\nconst send = (text) => {\n  axios.post('https://rythm-manager.herokuapp.com/', {\n    msg: text,\n  })\n}\nexport default send\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport send from './send'\nconst { forwardRef, useImperativeHandle } = React\n\nconst Sender = forwardRef(({ command, prefix }, ref) => {\n  useImperativeHandle(ref, () => ({\n    sendWithPrefixAndCommand(text) {\n      send(`${prefix}${command} ${text}`)\n    },\n    sendWithPrefix(text) {\n      send(`${prefix} ${text}`)\n    },\n  }))\n\n  return <></>\n})\n\nconst mapStateToProps = (state) => {\n  const { command, prefix } = state\n  return {\n    command,\n    prefix,\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    // setCommand: (value) => dispatch({ type: 'CHANGE_COMMAND', value }),\n    // setFunctions: (functions) => dispatch({ type: 'SET_FUNCTIONS', functions }),\n    // setAlgorithmState: (value) =>\n    //   dispatch({ type: 'SET_ALGORITHM_STATE', value }),\n    // setCurrentGeneration: (value) =>\n    //   dispatch({ type: 'SET_CURRENT_GENERATION', value }),\n    // setBestSpecimens: (value) =>\n    //   dispatch({ type: 'SET_BEST_SPECIMENS', value }),\n    // setBestSpecimen: (value) => dispatch({ type: 'SET_BEST_SPECIMEN', value }),\n  }\n}\nconst Container = connect(mapStateToProps, mapDispatchToProps, null, {\n  forwardRef: true,\n})(Sender)\nexport default Container\n","import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Grid from '@material-ui/core/Grid'\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport axios from 'axios'\nimport TopBar from './TopBar'\nimport Sender from './Sender'\n\nimport { connect } from 'react-redux'\n\nconst R = require('ramda')\nconst { useRef } = React\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n    backgroundColor: theme.palette.background.paper,\n  },\n  nested: {\n    paddingLeft: theme.spacing(4),\n  },\n  content: {\n    margin: '35px 0 0 0',\n  },\n}))\n\nfunction App() {\n  function shuffle(array) {\n    var currentIndex = array.length,\n      temporaryValue,\n      randomIndex\n\n    // While there remain elements to shuffle...\n    while (0 !== currentIndex) {\n      // Pick a remaining element...\n      randomIndex = Math.floor(Math.random() * currentIndex)\n      currentIndex -= 1\n\n      // And swap it with the current element.\n      temporaryValue = array[currentIndex]\n      array[currentIndex] = array[randomIndex]\n      array[randomIndex] = temporaryValue\n    }\n\n    return array\n  }\n\n  const classes = useStyles()\n  const [myList, setMyList] = React.useState([])\n  const [links, setLinks] = React.useState([])\n  const [linksByArtist, setLinksByArtist] = React.useState({})\n  // const links = {}\n  function extractHash(link) {\n    const res1 = link.match(/watch\\?v=([^&]*)/)\n    const res2 = link.match(/youtu\\.be\\/([^?]*)/)\n    const hash = (res1 && res1[1]) || (res2 && res2[1]) || link\n    return hash\n  }\n\n  React.useEffect(() => {\n    console.log('useEffect')\n    function reduceFn(acc, x, path = []) {\n      if (x.length < 1) return acc\n      if (x[0] === '-') {\n        return reduceFn(acc, x.slice(1), [\n          ...path,\n          R.path(path, acc.data).length - 1,\n          'children',\n        ])\n      } else {\n        const split = x.split(' - ')\n        const title = split.length > 1 ? split.slice(0, -1).join(' - ') : x\n        const link = split.length > 1 ? split.slice(-1)[0] : ''\n        const command = extractHash(link.trim())\n        return {\n          data: R.assocPath(\n            [...path, R.pathOr([], path, acc.data).length],\n            {\n              name: title.trim(),\n              ...(command.length > 0 ? { command } : {}),\n            },\n            acc.data\n          ),\n          links: [...acc.links, ...(command.length > 0 ? [command] : [])],\n          currentArtist: path.length > 0 ? acc.currentArtist : title,\n          linksByArtist:\n            path.length > 0 && command.length > 0\n              ? R.assocPath(\n                  [\n                    acc.currentArtist,\n                    R.pathOr([], [acc.currentArtist], acc.linksByArtist).length,\n                  ],\n                  command,\n                  acc.linksByArtist\n                )\n              : acc.linksByArtist,\n        }\n      }\n    }\n\n    function dataMapper(data) {\n      const mapped = R.reduce(\n        reduceFn,\n        { data: [], links: [], linksByArtist: {} },\n        data.split('\\n').filter((x) => !x.startsWith('#'))\n      )\n      // console.log(mapped.linksByArtist)\n      return mapped\n    }\n\n    async function effect() {\n      console.log('effect')\n      const { data } = await axios.get(\n        'https://raw.githubusercontent.com/Vulwsztyn/rythm-manager/config/config'\n      )\n      // console.log(dataMapper(data))\n      const mappedData = dataMapper(data)\n      setMyList(shuffle(mappedData.data))\n      setLinks(mappedData.links)\n      setLinksByArtist(mappedData.linksByArtist)\n      setInterval(\n        () => axios.get('https://rythm-manager.herokuapp.com/'),\n        10000\n      )\n    }\n    effect()\n  }, [])\n\n  const choose = (items) => items[Math.floor(Math.random() * items.length)]\n\n  function oneOfEverything() {\n    const list = shuffle(\n      Object.keys(linksByArtist).map((name) => choose(linksByArtist[name]))\n    )\n    sendList(list)\n  }\n\n  function playRandomN(n) {\n    const list = shuffle(links).slice(0, n)\n    sendList(list)\n  }\n\n  function elemToList(e) {\n    if (!e.children) {\n      return [e.command]\n    } else {\n      return e.children.map((e) => elemToList(e)).reduce((x, y) => x.concat(y))\n    }\n  }\n\n  async function handleClick(e) {\n    const list = elemToList(e)\n    sendList(shuffle(list))\n  }\n\n  const listMapper = (padding) => (e) => {\n    return (\n      <>\n        <ListItem\n          button={true}\n          key={e.name}\n          style={{ paddingLeft: (padding + 1) * 4 + 'em' }}\n          onClick={async () => {\n            handleClick(e)\n          }}\n        >\n          <ListItemText primary={e.name} />\n        </ListItem>\n        {e.children ? (\n          <List component=\"div\" disablePadding>\n            {e.children.map(listMapper(padding + 1))}\n          </List>\n        ) : (\n          <></>\n        )}\n      </>\n    )\n  }\n  const childRef = useRef()\n\n  async function sendList(list) {\n    console.log(list)\n    await childRef.current.sendWithPrefixAndCommand(\n      `http://www.youtube.com/watch_videos?video_ids=` + list.join(',')\n    )\n  }\n\n  return (\n    <>\n      <Sender ref={childRef} />\n      <TopBar\n        position=\"sticky\"\n        playRandomN={playRandomN}\n        oneOfEverything={oneOfEverything}\n        sendWithPrefix={(t) => childRef.current.sendWithPrefix(t)}\n      />\n      <Grid container spacing={3} className={classes.content}>\n        {[\n          myList.slice(\n            Math.floor(myList.length / 4) * 0,\n            Math.floor(myList.length / 4) * 1\n          ),\n          myList.slice(\n            Math.floor(myList.length / 4) * 1,\n            Math.floor(myList.length / 4) * 2\n          ),\n          myList.slice(\n            Math.floor(myList.length / 4) * 2,\n            Math.floor(myList.length / 4) * 3\n          ),\n          myList.slice(\n            Math.floor(myList.length / 4) * 3,\n            Math.floor((myList.length / 4) * 4)\n          ),\n        ].map((splitList) => (\n          <Grid xs={12} sm={6} md={4} lg={3}>\n            {splitList.map((band) => {\n              return (\n                <Grid item xs={12}>\n                  <List\n                    component=\"nav\"\n                    aria-labelledby=\"nested-list-subheader\"\n                    className={classes.root}\n                  >\n                    {[band].map(listMapper(0))}\n                  </List>\n                </Grid>\n              )\n            })}\n          </Grid>\n        ))}\n      </Grid>\n    </>\n  )\n}\nconst mapStateToProps = (state) => {\n  return {}\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    // setFunctions: (functions) => dispatch({ type: 'SET_FUNCTIONS', functions }),\n    // setAlgorithmState: (value) =>\n    //   dispatch({ type: 'SET_ALGORITHM_STATE', value }),\n    // setCurrentGeneration: (value) =>\n    //   dispatch({ type: 'SET_CURRENT_GENERATION', value }),\n    // setBestSpecimens: (value) =>\n    //   dispatch({ type: 'SET_BEST_SPECIMENS', value }),\n    // setBestSpecimen: (value) => dispatch({ type: 'SET_BEST_SPECIMEN', value }),\n  }\n}\nconst Container = connect(mapStateToProps, mapDispatchToProps)(App)\nexport default Container\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const defaultState = {\n  command: 'p',\n  prefix: '!',\n}\nexport const reducer = function (state = defaultState, action) {\n  switch (action.type) {\n    case 'CHANGE_COMMAND':\n      return {\n        ...state,\n        command: action.value,\n      }\n    case 'CHANGE_PREFIX':\n      return {\n        ...state,\n        prefix: action.value,\n      }\n    default:\n      return state\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\nimport { reducer } from './reducers'\nimport { createStore } from 'redux'\nimport { Provider } from 'react-redux'\nimport { HashRouter as Router, Switch, Route } from 'react-router-dom'\nconst store = createStore(reducer)\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n        <Router basename={process.env.PUBLIC_URL}>\n          <Switch>\n            <Route path=\"/links\" children={<div>test</div>} />\n            <Route\n              path=\"/\"\n              children={\n                <App\n                  style={{\n                    display: 'flex',\n                    justifyContent: 'center',\n                    alignItems: 'center',\n                  }}\n                />\n              }\n            />\n            <Route\n              path=\"\"\n              children={\n                <App\n                  style={{\n                    display: 'flex',\n                    justifyContent: 'center',\n                    alignItems: 'center',\n                  }}\n                />\n              }\n            />\n          </Switch>\n        </Router>\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}