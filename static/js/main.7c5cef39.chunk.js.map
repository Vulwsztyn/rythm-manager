{"version":3,"sources":["send.js","App.js","TopBar.js","serviceWorker.js","theme.js","index.js"],"names":["send","text","axios","post","msg","R","require","useStyles","makeStyles","theme","root","width","backgroundColor","palette","background","paper","nested","paddingLeft","spacing","NestedList","shuffle","array","temporaryValue","randomIndex","currentIndex","length","Math","floor","random","classes","React","useState","myList","setMyList","useEffect","reduceFn","acc","x","path","slice","split","title","rest","command","join","trim","assocPath","pathOr","name","dataMapper","data","reduce","a","get","console","log","effect","Grid","container","map","splitList","xs","band","item","List","component","aria-labelledby","className","listMapper","padding","e","ListItem","button","key","style","onClick","ListItemText","primary","children","disablePadding","ElevationScroll","props","window","trigger","useScrollTrigger","disableHysteresis","threshold","target","undefined","cloneElement","elevation","margin","right","marginLeft","TopBar","Fragment","CssBaseline","AppBar","Toolbar","Button","variant","color","Boolean","location","hostname","match","darkTheme","createMuiTheme","type","ReactDOM","render","StrictMode","ThemeProvider","position","display","justifyContent","alignItems","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.7c5cef39.chunk.js","sourcesContent":["import axios from 'axios'\nconst send = (text) => {\n  axios.post('https://rythm-manager.herokuapp.com/', {\n    msg: text,\n  })\n}\nexport default send\n","import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Grid from '@material-ui/core/Grid'\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport axios from 'axios'\nimport send from './send'\nconst R = require('ramda')\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n    backgroundColor: theme.palette.background.paper,\n  },\n  nested: {\n    paddingLeft: theme.spacing(4),\n  },\n}))\n\nexport default function NestedList() {\n  function shuffle(array) {\n    var currentIndex = array.length,\n      temporaryValue,\n      randomIndex\n\n    // While there remain elements to shuffle...\n    while (0 !== currentIndex) {\n      // Pick a remaining element...\n      randomIndex = Math.floor(Math.random() * currentIndex)\n      currentIndex -= 1\n\n      // And swap it with the current element.\n      temporaryValue = array[currentIndex]\n      array[currentIndex] = array[randomIndex]\n      array[randomIndex] = temporaryValue\n    }\n\n    return array\n  }\n\n  const classes = useStyles()\n  const [myList, setMyList] = React.useState([])\n\n  React.useEffect(() => {\n    function reduceFn(acc, x, path = []) {\n      if (x.length < 1) return acc\n      if (x[0] === '-') {\n        return reduceFn(acc, x.slice(1), [\n          ...path,\n          R.path(path, acc).length - 1,\n          'children',\n        ])\n      } else {\n        const [title, ...rest] = x.split('-')\n        const command = rest.join('-').trim()\n        return R.assocPath(\n          [...path, R.pathOr([], path, acc).length],\n          {\n            name: title.trim(),\n            ...(command.length > 0 ? { command } : {}),\n          },\n          acc\n        )\n      }\n    }\n\n    function dataMapper(data) {\n      const mapped = R.reduce(reduceFn, [], data.split('\\n'))\n      return mapped\n    }\n\n    async function effect() {\n      const { data } = await axios.get(\n        'https://raw.githubusercontent.com/Vulwsztyn/rythm-manager/config/config'\n      )\n      console.log(dataMapper(data))\n      setMyList(shuffle(dataMapper(data)))\n      await send('!summon')\n    }\n    effect()\n  }, [])\n\n  const listMapper = (padding) => (e) => {\n    return (\n      <>\n        <ListItem\n          button={e.command}\n          key={e.name}\n          style={{ paddingLeft: (padding + 1) * 4 + 'em' }}\n          onClick={async () => {\n            if (e.command) {\n              await send(e.command)\n            }\n          }}\n        >\n          <ListItemText primary={e.name} />\n        </ListItem>\n        {e.children ? (\n          <List component=\"div\" disablePadding>\n            {shuffle(e.children).map(listMapper(padding + 1))}\n          </List>\n        ) : (\n          <></>\n        )}\n      </>\n    )\n  }\n\n  return (\n    <Grid container spacing={3}>\n      {[\n        myList.slice(\n          Math.floor(myList.length / 4) * 0,\n          Math.floor(myList.length / 4) * 1\n        ),\n        myList.slice(\n          Math.floor(myList.length / 4) * 1,\n          Math.floor(myList.length / 4) * 2\n        ),\n        myList.slice(\n          Math.floor(myList.length / 4) * 2,\n          Math.floor(myList.length / 4) * 3\n        ),\n        myList.slice(\n          Math.floor(myList.length / 4) * 3,\n          Math.floor((myList.length / 4) * 4)\n        ),\n      ].map((splitList) => (\n        <Grid xs={3}>\n          {splitList.map((band) => {\n            return (\n              <Grid item xs={12}>\n                <List\n                  component=\"nav\"\n                  aria-labelledby=\"nested-list-subheader\"\n                  className={classes.root}\n                >\n                  {[band].map(listMapper(0))}\n                </List>\n              </Grid>\n            )\n          })}\n        </Grid>\n      ))}\n    </Grid>\n  )\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport AppBar from '@material-ui/core/AppBar'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport CssBaseline from '@material-ui/core/CssBaseline'\nimport useScrollTrigger from '@material-ui/core/useScrollTrigger'\nimport Button from '@material-ui/core/Button'\n\nimport { makeStyles } from '@material-ui/core/styles'\nimport send from './send'\nfunction ElevationScroll(props) {\n  const { children, window } = props\n  // Note that you normally won't need to set the window ref as useScrollTrigger\n  // will default to window.\n  // This is only being set here because the demo is in an iframe.\n  const trigger = useScrollTrigger({\n    disableHysteresis: true,\n    threshold: 0,\n    target: window ? window() : undefined,\n  })\n\n  return React.cloneElement(children, {\n    elevation: trigger ? 4 : 0,\n  })\n}\n\nElevationScroll.propTypes = {\n  children: PropTypes.element.isRequired,\n  /**\n   * Injected by the documentation to work in an iframe.\n   * You won't need it on your project.\n   */\n  window: PropTypes.func,\n}\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    '& > *': {\n      margin: theme.spacing(1),\n      'font-size': 16,\n    },\n  },\n  right: {\n    marginLeft: 'auto',\n  },\n}))\nexport default function TopBar(props) {\n  const classes = useStyles()\n  return (\n    <React.Fragment>\n      <CssBaseline />\n      <ElevationScroll {...props}>\n        <AppBar>\n          <Toolbar className={classes.root}>\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              onClick={() => send('!q')}\n            >\n              !q\n            </Button>\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              onClick={() => send('!fs')}\n            >\n              !fs\n            </Button>\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              onClick={() => send('!pause')}\n            >\n              !pause\n            </Button>\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              onClick={() => send('!p')}\n            >\n              !play\n            </Button>\n            <Button\n              variant=\"contained\"\n              color=\"secondary\"\n              className={classes.right}\n              onClick={() => send('!disconnect')}\n            >\n              !Disconnect\n            </Button>\n          </Toolbar>\n        </AppBar>\n      </ElevationScroll>\n      <Toolbar />\n    </React.Fragment>\n  )\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { createMuiTheme } from '@material-ui/core/styles'\nconst darkTheme = createMuiTheme({\n  palette: {\n    type: 'dark',\n  },\n})\nexport default darkTheme\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport TopBar from './TopBar'\nimport * as serviceWorker from './serviceWorker'\nimport { ThemeProvider } from '@material-ui/core/styles'\nimport darkTheme from './theme'\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={darkTheme}>\n      <TopBar position=\"sticky\" />\n      <App\n        style={{\n          display: 'flex',\n          justifyContent: 'center',\n          alignItems: 'center',\n        }}\n      />\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}